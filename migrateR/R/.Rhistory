`[.mvmts` <- function(x,i,burst){
if (!inherits(x,"mvmts")){
stop("x should be of class \"mvmts\"")
}
if(sum(!missing(i))+(!missing(burst))!=1){
stop("non convenient subset")
}
if (!missing(i)){
x <- unclass(x)
y <- x[i]
}
if (!missing(burst)){
idb <- summary(x)$burst
x <- unclass(x)
y <- x[idb%in%burst]
}
class(y)<- c("mvmts","list")
return(y)
}
require(migrateR)
class(test[rownames(tcoef0$disperser)])
data.in <- "/users/jacobim/documents/hal/thesis/2 classification/2 analysis/2017-09-22"
data.out <-"/users/jacobim/documents/hal/thesis/2 classification/2 analysis/2018-01-16"
load(file.path(data.in, "snbs_ltraj.Rdata"))
comment(f.ltraj)
hu_nts <-  c("Wr", "Gb", "Ca", "Cn", "Wh", "Tb", "Sw", "Bx", "Bb", "Wl", "Ba", "Ln", "Lr", "Ol")
names(hu_nts) <- c("Warren", "Gibbs", "Cathedral", "Convict", "Wheeler",
"Taboose", "Sawmill", "Baxter", "Bubbs", "Williamson",
"Big Arroyo", "Langley", "Laurel", "Olancha")
ie <- which(burst(f.ltraj)%in%c("S166 2009", "S167 2009", "S167 2010",
"S167 2012", "S376 2015","S411 2015"))  # length(ie)
gap <- which(burst(f.ltraj)%in%c("S108 2007"))  # length(gap)
date.end <- as.POSIXlt(summary(f.ltraj)$date.end)
short <- which((date.end$mon + 1) < 4 |
((date.end$mon + 1)==4 & date.end$mday<15))  #  # length(short); date.end[short]
date.beg <- as.POSIXlt(summary(f.ltraj)$date.begin)
short2 <- which(!(date.beg$mon + 1)%in%(9:11) |
((date.beg$mon + 1)==11 & date.beg$mday>15))  # date.beg[short2]
w.cut <- unique(c(gap, short, short2))  # length(w.cut); length(f.ltraj)
f.ltraj <- f.ltraj[-w.cut, ]  # length(f.ltraj)  # 262? TK 27d + 154m + 93r = 274?? TK
pest.e2 <- pEst(s.d = 200)
pest.e3 <- pEst(s.d = 400)
pest.e4 <- pEst(s.d = -200)
pest.e5 <- pEst(s.t=150,u.d=0,s.d=-500,s.r=1)
pest.e6 <- pEst(s.t=50, u.d=0, s.r=1, u.r=20, s.g=3100, s.d=-1700)
pest.e7 <- pEst(s.t=40, u.d=-500, s.r=1, u.r=20, s.g=3100, s.d=-1700)
pest.e8 <- pEst(s.t=240, s.d=500, l.d = 200)
test1 <- mvmtClass(f.ltraj, stdt="10-31",fam="elev"); sum(!fullmvmt(test1))  # 105
test2 <- refine(test1, p.est = pest.e2); sum(!fullmvmt(test2)) # 35
test3 <- refine(test2, p.est = pest.e3); sum(!fullmvmt(test3)) # 26
test4 <- refine(test3, p.est = pest.e4); sum(!fullmvmt(test4)) # 14
test5 <- refine(test4, p.est = pest.e5); sum(!fullmvmt(test5)) # 6
test6 <- refine(test5, p.est = pest.e6); sum(!fullmvmt(test6)) # 3
test7 <- refine(test6, p.est = pest.e7); sum(!fullmvmt(test7)) # 1
test <- refine(test7, p.est = pest.e8); sum(!fullmvmt(test)) ## all models fit
hus <- sapply(infolocs(f.ltraj), function(z) z$hu[1])
table(hus)# Big Arroyo, Bubbs, Baxter, Cathedral, Convict, Gibbs, Langley, Laurel, Olancha, Sawmill, Taboose, Wheeler, Williamson, Warren
test.top <- topmvmt(test)
length(test.top)
table(temp.class <- names(test.top))
tcoef0 <- mvmt2df(test.top)
t2 <- theta2(test[which(names(test)%in%rownames(tcoef0$migrant))])
tcoef0$migrant$theta2 <- unlist(t2$theta2)  # head(tcoef$migrant)
tcoef0$migrant$dtheta <- tcoef0$migrant$theta2 - tcoef0$migrant$theta
tcoef.cz <- tcoef0 # Check Copy (subtract layers)
tcoef <- list() # Final Product
wm2m <- which(abs(tcoef0$migrant$delta) >= 500 & (tcoef0$migrant$rho>=30|tcoef0$migrant$dtheta>=80))
mig2mig <- rownames(tcoef0$migrant)[wm2m]
tcoef$migrant <- tcoef0$migrant[mig2mig, ]
tcoef.cz$migrant <- tcoef.cz$migran[!rownames(tcoef.cz$migrant)%in%mig2mig,]
mig.oop <- rownames(tcoef$migrant)[which(tcoef$migrant$delta>0)]
tcoef$migrant[mig.oop, c("rho")] <- NA
tcoef$migrant[mig.oop, c("gamma")] <- apply(tcoef$migrant[mig.oop, c("gamma", "delta")], 1, sum)
tcoef$migrant[mig.oop, c("delta")] <- -tcoef$migrant[mig.oop, "delta"]
tcoef$migrant[mig.oop, c("theta", "phi", "theta2", "phi2")] <- c(NA, tcoef$migrant[mig.oop, c("phi2", "theta", "phi")])
mig2res <- rownames(tcoef0$migrant)[which(abs(tcoef0$migrant$delta) < 500 | (tcoef0$migrant$rho<30 & tcoef0$migrant$dtheta<80))]
tcoef$resident <- tcoef0$migrant[mig2res, "gamma", F]
tcoef.cz$migrant <- tcoef.cz$migrant[which(!rownames(tcoef.cz$migrant)%in%mig2res), ]
res2res <- rownames(tcoef0$resident)
tcoef$resident <- rbind(tcoef$resident, tcoef0$resident)
tcoef.cz$resident <- tcoef.cz$resident[which(!rownames(tcoef.cz$resident)%in%res2res), , F]
forays <- rownames(tcoef0$migrant)[which(
tcoef0$migrant$rho<30&tcoef0$migrant$dtheta<80&tcoef0$migrant$delta<= -500)]
tcoef.cz[-1] # Check: All migrants & residents classifications checked? (should return <0 rows>)
length(test) - sum(unlist(sapply(tcoef, nrow))) # Unclassified
sapply(tcoef, nrow) # 246 Successful Classifications v. 247 in MS (154/93)
round(sapply(tcoef, nrow)/sum(sapply(tcoef, nrow)), 2) # Overall prevalence of migration/residency
length(forays)/nrow(tcoef$resident) # Overall prevalence of forays (among all residents)
missing.id <- names(test)[which(!names(test)%in%unlist(sapply(tcoef,rownames)))]
dupes <- rownames(tcoef$resident)[which(rownames(tcoef$resident)%in%rownames(tcoef$unknown))]
tcoef$migrant[dupes, ]  # should return <0 rows>
match(rownames(tcoef$migrant), burst(f.ltraj))
mhus <- sapply(infolocs(f.ltraj[burst(f.ltraj)%in%rownames(tcoef$migrant)]), function(z){
z$hu[1]
})
mhus <- mhus[match(rownames(tcoef$migrant), burst(f.ltraj[burst(f.ltraj)%in%rownames(tcoef$migrant)]))]
tcoef$migrant$herd <- mhus
tcoef$migrant$herd <- factor(tcoef$migrant$herd, levels = hu_nts)
rhus <- sapply(infolocs(f.ltraj[burst(f.ltraj)%in%rownames(tcoef$resident)]), function(z){
z$hu[1]
})
rhus <- rhus[match(rownames(tcoef$resident), burst(f.ltraj[burst(f.ltraj)%in%rownames(tcoef$resident)]))]
tcoef$resident$herd <- rhus
class(test[rownames(tcoef0$disperser)])
plot(test[rownames(tcoef0$disperser)], ylim = c(1500, 4000))
plot(test[rownames(tcoef0$disperser)], ylim = c(1500, 4000))
plot(test[1])
plot(test[[1]])
plot(test[[1]])
plot(test[[1]])
test[[1]]
plot(test[[1]])
plot(as.mvmts(test[1]))
as.mvmts <- function(z){
if(class(z)=="list"& class(z[[1]])=="mvmt")
class(z) <- c("mvmts", "list")
return(z)
}
plot(as.mvmts(test[1]))
clsas(test[1])
class(test[1])
plot(as.mvmts(test[1]))
get("[.ltraj")
class(test[1])
class(test[[1]])
inherits(test[1], "mvmts")
inherits(test[[1]], "mvmts")
inherits(test[[1]], "mvmt")
plot(test)
burst(test)
names(test)
as.mvmts <- function(z){
if(class(z)=="list"& class(z[[1]])=="mvmt")
class(z) <- c("mvmts", "list")
return(z)
}
plot(as.mvmts(test[1]))
as.mvmts <- function(z){
if(inherits(z, "list")& inherits(z, "mvmt")
class(z) <- c("mvmts", "list")
return(z)
}
as.mvmts <- function(z){
if(inherits(z, "list")& inherits(z[[1]]), "mvmt")
class(z) <- c("mvmts", "list")
return(z)
}
as.mvmts <- function(z){
if(inherits(z, "list")& inherits(z[[1]], "mvmt")
class(z) <- c("mvmts", "list")
return(z)
}
str(test[rownames(tcoef0$disperser)], ylim = c(1500, 4000))
class(test[rownames(tcoef0$disperser)])
# Migrant
nrow(tcoef$migrant)
if(F){
plot(as.mvmts(test[rownames(tcoef$migrant)]), ylim = c(1500, 4000))
}
# Resident
nrow(tcoef$resident)
if(F){
plot(as.mvmts(test[rownames(tcoef$resident)]), ylim = c(1500, 4000))
}
# Forays
length(forays)
if(F){
plot(test[forays], ylim = c(1500, 4000))
}
##--------------------------------------------------------------------------
## V. VISUAL CHECK OF PARAMETER ESTIMATES (Plotting optional)
if(F){
# Resident Gamma
hist(tcoef$resident$gamma, col = "grey", xlab = "gamma", main = "Resident")
hist(tcoef$resident$gamma, plot = F)
wlgr <- which(names(test)%in%rownames(tcoef$resident)[which(tcoef$resident$gamma<2800)]) # low gamma
table(hus[wlgr]); hus[wlgr]
# plot(as.mvmts(test[rownames(tcoef$resident)[which(tcoef$resident$gamma<2800)]]), ylim = c(1500, 4000))
# Migrant Gamma
hist(tcoef$migrant$gamma, col = "grey", xlab = "gamma", main = "Migrant")
hist(tcoef$migrant$gamma, plot=F)
wlgm <- which(names(test)%in%rownames(tcoef$migrant)[which(tcoef$migrant$gamma<3000)]) # low gamma
table(hus[wlgm]); hus[wlgm]
#  plot(test[rownames(tcoef$migrant)[which(tcoef$migrant$gamma< 3000)]], ylim=c(1500, 4500))
# Rho
hist(tcoef$migrant$rho, col = "grey", xlab = "rho", main = "Migrant")
hist(tcoef$migrant$rho, plot=F)
# Delta
hist(tcoef$migrant$delta, col = "grey", xlab = "delta", main = "Migrant")
hist(tcoef$migrant$delta, plot=F)
# dTheta
hist(tcoef$migrant$dtheta, col = "grey", xlab = "theta", main = "Migrant")
hist(tcoef$migrant$dtheta, plot=F)
# Theta
hist(tcoef$migrant$theta, col = "grey", xlab = "theta", main = "Migrant")
hist(tcoef$migrant$theta, plot=F)
# Theta--Foray: Bimodal (fall & spring)
p.foray <- tcoef0$migrant[rownames(tcoef0$migrant)%in%forays, ]
hist(p.foray$theta, col = "grey", xlab = "theta", main = "(Resident) Forays")
hist(p.foray$theta, plot=F)
# Theta2
hist(tcoef$migrant$theta2, col = "grey", xlab = "theta", main = "Migrant")
hist(tcoef$migrant$theta2, plot=F)
# Phi
hist(tcoef$migrant$phi, col = "grey", xlab = "phi", main = "Migrant")
hist(tcoef$migrant$phi, plot = F)
# Phi2
hist(tcoef$migrant$phi2, col = "grey", xlab = "phi2", main = "Migrant")
hist(tcoef$migrant$phi2, plot = F)
}
##--------------------------------------------------------------------------
## VI. SWITCHING
tclass <- data.frame(
aid = sapply(strsplit(names(test), " "), function(x) x[1]),
yr = sapply(strsplit(names(test), " "), function(x) x[2]),
herd = sapply(infolocs(f.ltraj[burst(f.ltraj)%in%names(test)]),function(x) x$hu[1]),
strat = NA
)
tclass$strat[which(names(test)%in%rownames(tcoef$resident))] <- "resident"
tclass$strat[which(names(test)%in%rownames(tcoef$migrant))] <- "migrant"
table(tclass$strat, useNA = "always")
# To Output list of Attempted Classificaitons w/Outcomes
if(F){
c.snbs <- tclass[, 1:4]
c.snbs$strat[is.na(c.snbs$strat)] <- "unknown"
comment(c.snbs) <- c("list of attempted SNBS movement classifications with outcomes"
, "data.frame with fields: animal id (aid), year (yr), herd (herd) and outcome (strat)"
, "created using snbs_migrateR.R with data dated 2017-09-22"
, as.character(Sys.Date()))
save(c.snbs,file=file.path(data.out, "csnbs.rdata"))
}
tclass1 <- na.omit(tclass) # nrow(tclass); nrow(tclass1); table(tclass1$strat)
# Summary of Strategy By Herd (Raw)
(st.x.hu <- table(tclass1$strat, tclass1$herd))
(solo <- which(st.x.hu[1, ]==0|st.x.hu[2, ]==0))
p.mig <- data.frame( y = st.x.hu[1, hu_nts]/table(tclass1$herd)[hu_nts], herd = names(hu_nts))
colnames(p.mig) <- c("hu", "y", "herd")
p.mig$herd <- factor(p.mig$herd, levels = names(hu_nts))
p.mig$n <- as.numeric(table(tclass1$herd)[hu_nts])
ggplot(p.mig, aes(x = herd, y = y, label = n)) + geom_bar(stat = "identity", colour = "black")+
geom_text(aes(y=0.05)) +
xlab("Sub-Population") +
ylab("Proportion of Migrants") + theme(axis.text.x = element_text(angle = 90, hjust = 0.5))
# RESUME HERE:
# Taboose: 0.50 now 66% => One Taboose dropped in previous draft
# williamson: ~ -12.5% => 1 class switch??
# olancha: ~ -8%  => 1 class switch?
sum(p.mig$n) # = 239 v. 247  => D8
sum(is.na(tclass$strat)) # = 23 v. 27  => D4
length(unique(tclass1$aid)) $ 157 v. 158 => +D3 ??
# Confirm single-strategy herds (Run = optional; check: st.x.hu < 4)
if(F){
hu.plot <- function(herd, strat){
hu.st <- apply(tclass1[which(tclass1$herd==herd&tclass1$strat==strat), 1:2], 1, paste, collapse = " ")
plot(test[hu.st], ylim=c(2000, 4000))
}
hu.plot("Bb", "resident")  # low elevation resident;
tcoef0$migrant["S317 2015", ]  # reclassified under: delta < 500
hu.plot("Ca", "migrant")
hu.plot("Ca", "resident")
hu.plot("Cn", "migrant")
hu.plot("Cn", "resident")
hu.plot("Gb", "resident")
hu.plot("Lr", "migrant")
hu.plot("Ol", "migrant")
hu.plot("Ol", "resident")
hu.plot("Tb", "migrant")
hu.plot("Tb", "resident")
hu.plot("Wh", "migrant")
hu.plot("Wr", "migrant")  # NOTE: Lots of inversions
hu.plot("Wr", "resident")
}
# Restrict to Solo Herds
nrow(tclass1)
tclass2 <- tclass1[which(!tclass1$herd%in%names(solo)), ]; nrow(tclass2)
# IDs with > 1 Year Data in same herd
tclass2$huid <- paste(tclass2$herd, tclass2$aid, sep = "_")
rep.ids <- table(tclass2$huid)[table(tclass2$huid)>1]
tclass3 <- tclass2[which(tclass2$huid%in%names(rep.ids)), ]; nrow(tclass3)
# Strategy Years
stratyr <- reshape(tclass3[, c("aid","yr","strat")], idvar="aid", timevar="yr", direction="wide")
stratyr$herd <- tclass3$herd[match(stratyr$aid,tclass3$aid)]
stratyr <- stratyr[, order(names(stratyr))]
switch.op <- sum(rep.ids)-length(rep.ids)
switches0 <- apply(stratyr, 1, function(x){
y <- x[!is.na(x)]
years <- (2005:2016)[(!is.na(x)[-(1:2)])]
transit <-c()
tyrs <- c()
for(i in 4:length(y)){
transit[i-3] <- paste(y[i-1],y[i],sep="2")
tyrs[i-3] <-paste(years[i-3],years[i-2],sep="/")
}
data.frame(aid=c(y[1]),herd=c(y[2]),tyrs=tyrs,swt=transit)
}) # warnings()
switches <- do.call("rbind",switches0)
switches$swt01 <- as.numeric(switches$swt%in%c("resident2migrant","migrant2resident"))
sum(switches$swt01)/nrow(switches)
# Strategy Switches by Herd: (Table 2)
table(switches$swt, switches$herd)[c(1,3,2,4), hu_nts[hu_nts%in%switches$herd]] # No switches at Big Arroyo
# Estimate Switching Rate
levels(switches$herd)
switch.mod1 <- glmer(swt01~(1|aid)+(1|herd), data=switches, family=binomial)
summary(switch.mod1)
# 95% CI (Accounting for Individual & Herd)
plogis(fixef(switch.mod1)-1.96*summary(switch.mod1)$coefficients[2])
plogis(fixef(switch.mod1))
plogis(fixef(switch.mod1)+1.96*summary(switch.mod1)$coefficients[2])
# Test for Directional Switching
switches$strat1 <- sapply(switches$swt, function(z){strsplit(as.character(z), "2")[[1]][1]})
switch.mod2 <- glmer(swt01~strat1 + (1|aid) + (1|herd), data=switches, family=binomial)
summary(switch.mod2)
as.mvmts <- function(z){
if(inherits(z, "list")& inherits(z[[1]], "mvmt"))
class(z) <- c("mvmts", "list")
return(z)
}
plot(as.mvmts(test[1]))
plot(as.mvmts(test[1]))
plot(as.mvmts(test[1]))
test <- refine(test7, p.est = pest.e8); sum(!fullmvmt(test)) ## all models fit
class(test[1])
class(test[[1]])
plot(test1)
plot(test1[[1]])
